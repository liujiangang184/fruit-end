<?php

namespace app\index\controller;

use think\Controller;
use think\Db;
use think\Request;

class Cart extends Controller
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        checkToken();
    }

    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function index()
    {
        //
    }

    /**
     * 显示创建资源表单页.
     *
     * @return \think\Response
     */
    public function create()
    {
        //
    }

    /**
     * 保存新建的资源
     *
     * @param  \think\Request $request
     * @return \think\Response
     */

    public function save(Request $request)
    {
        $uid = $this->request->id;
        $data = $this->request->post(); //发过来商品的价格和id
        $gid = $data['gid'];
        $sale = $data['sale'];
        $model = model('Cartmodel');
        $cart = $model->queryone($uid); //

        if ($cart) {
            $cid = $cart['cid'];
            $extramodel = model('Cartextramodel');
            $goodsInfo = $extramodel->queryone(['uid' => $uid, 'gid' => $gid]);
            $incResult = 0;
            $insertResult = 0;
            if ($goodsInfo) {
                $incResult = $extramodel->goodsnumInc(['uid' => $uid, 'gid' => $gid]);
            } else {
                //往购物车里面加商品，对应的商品的各个字段
                $insertResult = $extramodel->insertgoods(['uid' => $uid, 'num' => 1, 'status' => 1, 'gid' => $gid, 'cid' => $cid]);
            }
            // total price
            $numberInc = $model->cartInc($uid, 'total');  // 更新总数
            $priceInc = $model->cartInc($uid, 'price', $sale);  //更新总价
            if (($incResult && $numberInc && $priceInc) || ($insertResult && $numberInc && $priceInc)) {
                Db::commit();
                return json([
                    'code' => config('code.success'),
                    'msg' => '购物车添加成功',
                    'data' => ['cid' => $cid, 'uid' => $uid]
                ]);
            } else {
                Db::rollback();
            }

        } else {

            Db::startTrans(); //启动事务
            $arr = ['id' => $uid, 'total' => 1, 'price' => $data['sale']];
            $rows = $model->insertCart($arr);
            $cid = $model->getLastInsID();
            $goods = ['cid' => $cid, 'gid' => $data['gid'],
                'num' => 1, 'status' => 1, 'uid' => $uid
            ];
            $result = Db::table('cart_extra')->insert($goods);
            if ($rows && $result) {
                Db::commit(); // 提交事务
                return json([
                    'code' => config('code.success'),
                    'msg' => '购物车添加成功',

                ]);
            } else {
                Db::rollback(); //回滚事务
            }
        }
    }

    /**
     * 显示指定的资源
     *
     * @param  int $id
     * @return \think\Response
     */
    // api/cart/12
    public function read($id)
    {
        $uid = $this->request->id;
        $cartModel = model('Cartmodel');
        $cart = $cartModel->queryone($uid);
        /* $cartExtraModel=model('Cartextramodel');
         $goods=$cartExtraModel->queryGoods($uid);*/

        $goods = Db::table('cart_extra')->alias('c')
            ->field('c.gid,c.num,c.status,goods.gname,goods.sale,goods.gthumb')
            ->join('goods', 'c.gid=goods.id')
            ->select();
        if ($cart) {
            $cart['goods'] = $goods;
            return json([
                'code' => config('code.success'),
                'msg' => "购物车获取成功",
                'data' => $cart
            ]);
        } else {
            return json([
                'code' => config('code.success'),
                'msg' => "购物车空空如也"
            ]);
        }
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param  int $id
     * @return \think\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * 保存更新的资源
     *
     * @param  \think\Request $request
     * @param  int $id
     * @return \think\Response
     */

    public function update(Request $request, $id)
    {
        $data=$this->request->put();
        $gid=$data['gid'];
        $sale=$data['sale'];
        $uid=$this->request->id;

        $sarr=['uid'=>$uid,'gid'=>$gid];
        $cartExtraModel=model('Cartextramodel');
        $goods=$cartExtraModel->queryone($sarr);
        $status=$goods['status'] ? 0:1;
        $num=$goods['num'];

        Db::startTrans();
        $goodsResult=$cartExtraModel->updategoods($sarr,['status'=>$status]);

        $cartModel=model('Cartmodel');
        $cart=$cartModel->queryone($uid);
        $total=$cart['total'];
        $price=$cart['price'];

        if ($status){
            $total += $num;
            $price += $num * $sale;
        }else{
            $total -= $num;
            $price -= $num * $sale;
        }

        $cartResult=$cartModel->cartUpdate(['id'=>$uid],
            ['total'=>$total],['price'=>$price]);

     /*   $totalResult=$cartModel->cartDec($uid,'total',$num);
        $priceResult=$cartModel->carDec($uid,'price',$num * $sale);*/
        if ($goodsResult && $cartResult){
            Db::commit();
            return json([
                'code' => config('code.success'),
                'msg' => "购物车状态修改成功",
            ]);
        }else{
            Db::rollback();
            return json([
                'code' => config('code.faild'),
                'msg' => "购物车状态修改失败",
            ]);
        }
    }

    /**
     * 删除指定资源
     *
     * @param  int $id
     * @return \think\Response
     */
    public function delete($id)
    {
        //
    }
}
